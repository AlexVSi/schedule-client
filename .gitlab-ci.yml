image: docker:latest

services:
  - docker:dind
  - docker:stable

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  ARCHS: "linux/amd64,linux/arm64/v8"

stages:
  - build_container
  - deploy
  - cleanup

build:
  stage: build_container
  script:
    - apk add --no-cache docker-cli-buildx
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY" && echo "Loggin successful!"

    - docker buildx create --use
    - docker buildx inspect --bootstrap

    - |
      TAGS_FLAGS="-t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"

      if [[ ${CI_COMMIT_BRANCH} == ${CI_DEFAULT_BRANCH} ]]; then
        TAGS_FLAGS="$TAGS_FLAGS -t ${CI_REGISTRY_IMAGE}:latest"
      fi

      if [[ -n "${CI_COMMIT_TAG}" ]]; then
        TAGS_FLAGS="$TAGS_FLAGS -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}";
      fi

      echo "Build tags flags: $TAGS_FLAGS"
      docker buildx build --platform $ARCHS --label architecture=${ARCHS//,/|} --push $TAGS_FLAGS .
  tags:
    - ped-server

deploy:
  stage: deploy
  image: docker:stable
  only:
    - main
  script:
    - echo "Startup project"
    - apk add --no-cache docker-compose
    - export DOCKER_HOST="unix:///var/run/docker.sock" && docker-compose -f docker-compose.yml pull && docker-compose -f docker-compose.yml up -d
  tags:
    - ped-server

cleanup:
  stage: cleanup
  image: docker:stable
  script:
    - echo "System cleanup"
    - docker system prune -f
  tags:
    - ped-server
